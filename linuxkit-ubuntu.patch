Subject: [PATCH] Added support for newer Ubuntu kernels

Added build of ubuntu-based kernel image.
Added nouveau NVIDIA driver to modules blacklist.
Added Dockerfile to build headless NVIDIA GPU driver.
Updated docs.
See: PCC-5504

Added support for GPUs direct access from Tinkerbell workflows.
Updated kernel to 5.15.0-105.115.
See: PCC-5501

Enabled SSHd for LinuxKit.
Added support for public key being passed as Tinkerbell metadata.
See: PCC-5365
---
Index: pkg/sshd/build.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/sshd/build.yml b/pkg/sshd/build.yml
--- a/pkg/sshd/build.yml	(revision e25cc72531467959b0d6cfe46b4e8f3c548217f0)
+++ b/pkg/sshd/build.yml	(date 1720091306628)
@@ -2,7 +2,6 @@
 config:
   pid: host
   binds:
-    - /root/.ssh:/root/.ssh
     - /etc/resolv.conf:/etc/resolv.conf
     - /run:/run
     - /tmp:/tmp
Index: contrib/foreign-kernels/Dockerfile.deb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/contrib/foreign-kernels/Dockerfile.deb b/contrib/foreign-kernels/Dockerfile.deb
--- a/contrib/foreign-kernels/Dockerfile.deb	(revision e25cc72531467959b0d6cfe46b4e8f3c548217f0)
+++ b/contrib/foreign-kernels/Dockerfile.deb	(date 1713275765322)
@@ -1,8 +1,8 @@
-FROM alpine:3.8 AS extract
+FROM alpine:3.18 AS extract

 ARG DEB_URLS

-RUN apk add --no-cache curl dpkg tar && true
+RUN apk add --no-cache curl dpkg tar zstd && true
 WORKDIR /deb
 RUN mkdir extract
 RUN for url in ${DEB_URLS}; do \
Index: pkg/sshd/Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pkg/sshd/Dockerfile b/pkg/sshd/Dockerfile
--- a/pkg/sshd/Dockerfile	(revision e25cc72531467959b0d6cfe46b4e8f3c548217f0)
+++ b/pkg/sshd/Dockerfile	(date 1720092338387)
@@ -1,7 +1,7 @@
 FROM linuxkit/alpine:33063834cf72d563cd8703467836aaa2f2b5a300 AS mirror

-RUN mkdir -p /out/etc/apk && cp -r /etc/apk/* /out/etc/apk/
-RUN apk add --no-cache --initdb -p /out \
+RUN sed -i '1i https://dl-cdn.alpinelinux.org/alpine/edge/main' /etc/apk/repositories && mkdir -p /out/etc/apk && cp -r /etc/apk/* /out/etc/apk/
+RUN apk update && apk add --no-cache --initdb -p /out \
     alpine-baselayout \
     apk-tools \
     busybox \
Index: contrib/foreign-kernels/ubuntu.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/contrib/foreign-kernels/ubuntu.sh b/contrib/foreign-kernels/ubuntu.sh
--- a/contrib/foreign-kernels/ubuntu.sh	(revision e25cc72531467959b0d6cfe46b4e8f3c548217f0)
+++ b/contrib/foreign-kernels/ubuntu.sh	(date 1715201166974)
@@ -4,16 +4,16 @@
     echo "Usage: $0 <org/repo> <kernel version> <sub version>"
     echo
     echo "Example:"
-    echo "$0 foobar/kernel-ubuntu 4.14.0-13 15"
+    echo "$0 foobar/kernel-ubuntu 6.8.0-56 58"
     echo
     echo "This will create a local LinuxKit kernel package:"
-    echo "foobar/kernel-ubuntu:4.14.0-13.15"
+    echo "foobar/kernel-ubuntu:6.8.0-56.58"
     echo "which you can then push to hub or just use locally"
     exit 1
 fi

 # List all available kernels with:
-# curl -s http://mirrors.kernel.org/ubuntu/pool/main/l/linux/ | sed -n 's/.*href="\([^"]*\).*/\1/p' | grep -o "linux-image-[0-9]\.[0-9]\+\.[0-9]\+-[0-9]\+-generic_[^ ]\+amd64\.deb"
+# curl -s https://mirrors.edge.kernel.org/ubuntu/pool/main/l/linux/ | sed -n 's/.*href="\([^"]*\).*/\1/p' | grep -o "linux-image-unsigned-[0-9]\.[0-9]\+\.[0-9]\+-[0-9]\+-generic_[^ ]\+amd64\.deb"

 REPO=$1
 VER1=$2
@@ -21,11 +21,12 @@
 URL=http://mirrors.kernel.org/ubuntu/pool/main/l/linux
 ARCH=amd64

-KERNEL_DEB="${URL}/linux-image-${VER1}-generic_${VER1}.${VER2}_${ARCH}.deb"
-KERNEL_EXTRA_DEB="${URL}/linux-image-extra-${VER1}-generic_${VER1}.${VER2}_${ARCH}.deb"
+KERNEL_DEB="${URL}/linux-image-unsigned-${VER1}-generic_${VER1}.${VER2}_${ARCH}.deb"
 HEADERS_DEB="${URL}/linux-headers-${VER1}-generic_${VER1}.${VER2}_${ARCH}.deb"
 HEADERS_ALL_DEB="${URL}/linux-headers-${VER1}_${VER1}.${VER2}_all.deb"
+MODULES_DEB="${URL}/linux-modules-${VER1}-generic_${VER1}.${VER2}_${ARCH}.deb"
+MODULES_EXTRA_DEB="${URL}/linux-modules-extra-${VER1}-generic_${VER1}.${VER2}_${ARCH}.deb"

-DEB_URLS="${KERNEL_DEB} ${KERNEL_EXTRA_DEB} ${HEADERS_DEB} ${HEADERS_ALL_DEB}"
+DEB_URLS="${KERNEL_DEB} ${HEADERS_DEB} ${HEADERS_ALL_DEB} ${MODULES_DEB} ${MODULES_EXTRA_DEB}"

 docker build -t "${REPO}:${VER1}.${VER2}" -f Dockerfile.deb --no-cache --build-arg DEB_URLS="${DEB_URLS}" .
